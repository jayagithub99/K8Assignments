go to cronjob.yaml (/root/kubernetes-training/04-controllers)
Open the file and change the 1st line to (apiVersion: batch/v1beta1).
Run this file

[root@ip-172-31-18-159 04-controllers]# kubectl create -f cronjob.yaml 
cronjob.batch/batch-job-every-fifteen-minutes created

[root@ip-172-31-18-159 04-controllers]# kubectl get cronjob batch-job-every-fifteen-minutes
NAME                              SCHEDULE             SUSPEND   ACTIVE   LAST SCHEDULE   AGE
batch-job-every-fifteen-minutes   0,15,30,45 * * * *   False     0        <none>          38s


Find out what is the command to "get" the running jobs.
[root@ip-172-31-18-159 04-controllers]# kubectl get jobs 
No resources found in jk namespace.

Observe and if possible, paste the results from your practicals.
Also identify how you would "permanently arrest" the jobs from running.

If we are asking to suspend the cronjobs in we can add a field  uner spec as "suspended=true"

[root@ip-172-31-18-159 04-controllers]# cat cronjob.yaml 
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: batch-job-every-fifteen-minutes
spec:
  schedule: "0,15,30,45 * * * *"
  suspend : true
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: periodic-batch-job
        spec:
          restartPolicy: OnFailure
          containers:
          - name: main
            image: luksa/batch-job
            
What is the change from normal Jobs (jobs v/s cronJobs) - Your observation in one sentence.

>>A job creates one or more pods running in parallel. You can specify how many pods need to complete in this Job. Cronjob runs a job periodically on a given schedule.
